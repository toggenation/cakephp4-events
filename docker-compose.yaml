# For more information: https://laravel.com/docs/sail
version: '3'
services:
  # sftp:
  #   restart: unless-stopped
  #   build:
  #     context: ./docker/config/sftp/
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${FORWARD_SFTP_PORT:-22}:22"
  #   command: sftpuser:sftppass:1001:1073
  #   volumes:
  #     - ./sftproot/IN:/home/sftpuser/IN
  #     - ./sftproot/OUT:/home/sftpuser/OUT
  #   networks:
  #     - events-net
  # redis:
  #   image: redis
  #   restart: unless-stopped
  #   ports:
  #     - "${FORWARD_REDIS_PORT:-6379}:6379"
  #   networks:
  #     - events-net
  nginx:
    image: nginx:latest
    ports:
      - "${FORWARD_NGINX_PORT:-80}:80"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - '.:/var/www/wms'
      - ./docker/config/nginx/site.conf:/etc/nginx/conf.d/default.conf
      # so we can cache our github tokens
      - '~/.composer/docker-cache/:/root/.composer:cached'
      - '~/.config/composer/:/root/.config/composer:cached'
      - vscode-extensions:/root/.vscode-server/extensions
    networks:
      - events-net
    links:
      - php
      # - cups
      - mailhog
    depends_on:
      - mysql
    restart: unless-stopped
  php:
    restart: unless-stopped
    # build:
    #   context: ./docker/config/php/
    #   dockerfile: Dockerfile
    image: 100pbc-php:latest
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - events-net
    volumes:
      - .:/var/www/wms
    links:
      - mysql
      # - postgres
      # - cups
      - mailhog
  # cups:
  #   restart: unless-stopped
  #   build:
  #     context: ./docker/config/cups/
  #     dockerfile: Dockerfile
  #     network: host
  #   # image: tgn-wms/cups
  #   extra_hosts:
  #     - 'host.docker.internal:host-gateway'
  #   ports:
  #     - "${FORWARD_CUPS_PORT:-631}:631"
  #   # environment:
  #   #   WEB_DIR: '${WEB_SUBDIR}'
  #   #   CUPS_PORT: '${CUPS_PORT}'
  #   #   APACHE_PORT: '${APACHE_PORT}'
  #   volumes:
  #     - '.:/var/www/wms'
  #     # so we can cache our github tokens
  #     - '~/.composer/docker-cache/:/root/.composer:cached'
  #     - '~/.config/composer/:/root/.config/composer:cached'
  #     - vscode-extensions:/root/.vscode-server/extensions
  #   networks:
  #     - events-net
  #   depends_on:
  #     - mysql
  # postgres:
  #   image: postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
  #     POSTGRES_USER: '${POSTGRES_USER}'
  #     POSTGRES_DB: '${POSTGRES_DB}'
  #   ports:
  #     - '${FORWARD_POSTGRES_PORT:-5432}:5432'
  #   volumes:
  #     - 'tgnpostgres:/var/lib/postgresql/data'
  #     - './docker/config/postgres/postgres.conf:/etc/postgresql/postgresql.conf'
  #   networks:
  #     - events-net
  mysql:
    restart: unless-stopped
    image: 'mysql/mysql-server:latest'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - 'tgnmysql:/var/lib/mysql'
      # delegated'
      # /etc/mysql/conf.d for x64
      # for arm image
      - './docker/config/mysql/my.cnf:/etc/my.cnf'
    networks:
      - events-net
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${MYSQL_PASSWORD}" ]
      retries: 3
      timeout: 5s
  mailhog:
    restart: unless-stopped
    # build:
    #   context: ./docker/config/mailhog/
    #   dockerfile: Dockerfile
    image: '100pbc-mailhog:latest'
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - events-net
    # beanstalkd:
    #   build:
    #     context: ./docker/
    #     dockerfile: Dockerfile.beanstalkd
    #   ports:
    #     - "${BEANSTALKD_PORT:-11300}:11300"
networks:
  events-net:
    driver: bridge
volumes:
  tgnpostgres:
    driver: local
  tgnmysql:
    driver: local
  vscode-extensions:
    driver: local
